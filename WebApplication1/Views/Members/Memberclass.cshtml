@model IEnumerable<prjMusicBetter.Models.TClass>
@{
	ViewData["Title"] = "Memberclass";
}
<style>
    /*粉色底線*/
    .ddd {
        border-bottom: 2px solid #fc0254;
    }

    /*粉色按鈕*/
    .btm {
        height: 60px;
        min-width: 167px;
        right: 0;
        top: 0;
        border: none;
        border-radius: 80px;
        color: #fff;
        font-size: 15px;
        background: #fc0254;
        float: right;
    }

    /*留空白用的*/
    .container.ddd {
        padding-top: 20px; /* 設置上邊距擴展的像素值 */
        padding-bottom: 20px; /* 設置下邊距擴展的像素值 */
    }

    .mix {
        position: relative;
        overflow: hidden;
        margin: 10px 0; /* 上下留白 */
    }

        .mix a {
            display: flex;
            flex-direction: column;
            height: 100%;
            text-decoration: none; /* 避免超連結的下劃線 */
        }

        .mix div {
            position: relative;
            background-color: white;
            color: black;
            padding: 5px;
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            height: 100%;
        }

        .mix img {
            width: 100%;
            height: auto;
            display: block;
            border-radius: 10px; /* 添加圓角效果，根據需要調整 */
        }

        .mix span {
            background-color: white;
            color: black;
            padding: 5px;
            border: 1px solid #fc0254; /* 粉框 */
            border-radius: 5px; /* 添加圓角效果，根據需要調整 */
        }

        .mix h5, .mix p {
            text-align: center;
            margin: 5px 0; /* 上下留白 */
        }

        .mix p {
            max-width: 100%;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            text-align: left;
            color: #888;
            margin: 0;
            display: block;
            height: 75%;
            font-size: 0.8em;
        }

    .ClassName {
        margin: 0px auto;
        margin-bottom: 5px;
        text-align: center;
        overflow: hidden;
        height: 25px;
        width: 90%;
        line-height: 25px;
        text-overflow: ellipsis;
        white-space: nowrap;
        display: block;
    }

    .genres {
        position: relative; /* 設置相對定位，讓內部元素可以使用絕對定位相對於這個容器 */
    }

        .genres div {
            position: relative; /* 設置相對定位，讓內部元素可以使用絕對定位相對於這個容器 */
        }

    .gss {
        position: absolute; /* 設置絕對定位 */
        bottom: 0; /* 距離底部的距離 */
        right: 0; /* 距離右邊的距離 */
        background-color: white;
        color: black;
        padding: 5px;
        border: 1px solid #fc0254; /* 粉框 */
    }

        .gss[data-course-type="offline"] {
            background-color: #FFCBB3; /* 實體課程的背景顏色 */
        }

        .gss[data-course-type="online"] {
            background-color: #A6FFFF; /* 線上課程的背景顏色 */
        }

        /* 調整其他樣式以避免重疊 */
        .genres h5, .genres p, .genres span {
            z-index: 1; /* 設置 z-index，確保文字和 span 在同一層次 */
        }

        .genres img {
            width: 100%; /* 設定寬度為 100% */
            height: 200px; /* 設定高度為 200 像素，可以根據需要調整 */
            object-fit: cover; /* 保持原始比例並填滿指定的大小 */
        }

    .favorite-button {
        position: absolute;
        top: 0;
        right: 0;
        width: 60px;
        height: 50px;
        background-size: cover; /* 調整圖片大小以填滿按鈕 */
        border: none;
        background-color: transparent; /* 移除按鈕背景色 */
        cursor: pointer;
    }

    .scroll-to-top-btn {
        position: fixed;
        bottom: 50px;
        right: 50px;
        background-color: #fc0254;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        padding: 20px;
        display: none;
        z-index: 999; /* 將按鈕置於最上層 */
    }

        .scroll-to-top-btn i {
            font-size: 20px;
            position: fixed;
            z-index: 1000; /* 將 <i> 元素置於最上層 */
        }
</style>
<section class="playlist-section spad">
    <button href="javascript:void(0);" onclick="CheckLoginAndNavigate()" class="btm">新建課程</button>
    <div class="container-fluid">
        <div class="section-title" style="display: flex; align-items: center;">
            <h2 class="title" style="margin-right: 30px;">編輯我建立的課程</h2>
            <button type="button" id="btnToggleContent" class="btn btn-info">⌵</button>
        </div>
        <div class="clearfix"></div>
        <!-- 折疊內容 -->
        <div id="collapseContent" class="collapse show">
            <div class="container col-lg-12 ddd">
                <div class="text-right ">
                    <select id="selectSkill" class="form-select mr-2"></select>
                    <select id="selectOnLine" class="form-select mr-2">
                        <option value="0">請選擇線上或實體課程</option>
                        <option value="1">實體課程</option>
                        <option value="2">線上課程</option>
                    </select>
                    <input type="text" id="txtKeyword" name="keywords" placeholder="關鍵字" class="mr-2" value="" />
                    <button type="button" id="btnSearch" class="btn btn-secondary mr-2">條件搜尋</button>
                </div>
            </div>
            <div id="divList" class="row playlist-area">
                <!-- List內容 -->
            </div>
            <div id="pageButtons" class="text-center">
                <!-- 分頁按鈕位置 -->
            </div>
        </div>


        <div class="section-title" style="display: flex; align-items: center;">
            <h2 class="title" style="margin-right: 10px;">我買的課程</h2>
            <button type="button" id="btnToggleContent2" class="btn btn-info">⌵</button>
        </div>
        <div class="clearfix"></div>
        <!-- 折疊內容 -->
        <div id="collapseContent2" class="collapse show">
            <div class="container col-lg-12 ddd">
                <div class="text-right ">
                    <select id="selectSkill2" class="form-select mr-2"></select>
                    <select id="selectOnLine2" class="form-select mr-2">
                        <option value="0">請選擇線上或實體課程</option>
                        <option value="1">實體課程</option>
                        <option value="2">線上課程</option>
                    </select>
                    <input type="text" id="txtKeyword2" name="keywords" placeholder="關鍵字" class="mr-2" value="" />
                    <button type="button" id="btnSearch2" class="btn btn-secondary mr-2">條件搜尋</button>
                </div>
            </div>
            <div id="divList2" class="row playlist-area">
                <!-- List內容 -->
            </div>
            <div id="pageButtons2" class="text-center">
                <!-- 分頁按鈕位置 -->
            </div>
        </div>


        <div class="section-title" style="display: flex; align-items: center;">
            <h2 class="title" style="margin-right: 10px;">我的最愛</h2>
            <button type="button" id="btnToggleContent3" class="btn btn-info">⌵</button>
        </div>
        <div class="clearfix"></div>
        <!-- 折疊內容 -->
        <div id="collapseContent3" class="collapse show">
            <div class="container col-lg-12 ddd">
                <div class="text-right ">
                    <select id="selectSkill3" class="form-select mr-2"></select>
                    <select id="selectOnLine3" class="form-select mr-2">
                        <option value="0">請選擇線上或實體課程</option>
                        <option value="1">實體課程</option>
                        <option value="2">線上課程</option>
                    </select>
                    <input type="text" id="txtKeyword3" name="keywords" placeholder="關鍵字" class="mr-2" value="" />
                    <button type="button" id="btnSearch3" class="btn btn-secondary mr-2">條件搜尋</button>
                </div>
            </div>
            <div id="divList3" class="row playlist-area">
                <!-- List內容 -->
            </div>
            <div id="pageButtons3" class="text-center">
                <!-- 分頁按鈕位置 -->
            </div>
        </div>
    </div>
    <div id="scrollToTopBtn" class="scroll-to-top-btn">
        <i></i>
        ▲回到上方
    </div>
</section>
@section Scripts{
	<script>
        const selStyle = document.querySelector('#selectSkill');
        const selStyle2 = document.querySelector('#selectSkill2');
        const selStyle3 = document.querySelector('#selectSkill3');
        const pageButtonsContainer = $('#pageButtons');//分頁按鈕位置
        const pageButtonsContainer2 = $('#pageButtons2');
        const pageButtonsContainer3 = $('#pageButtons3');
        const onePage = 8;//一頁要有幾個課程
        const MemberId = @ViewBag.MemberId;

        //三個折疊頁
        $(document).ready(function () {
            // 初始時將內容折疊起來或展開
            var isContentVisible = localStorage.getItem('isContentVisible') === 'true';
            $("#collapseContent").toggle(isContentVisible);

            // 當按鈕被點擊時
            $("#btnToggleContent").click(function () {
                // 切換內容的顯示與隱藏
                $("#collapseContent").slideToggle(function () {
                    // 存儲展開/折疊狀態到本地存儲
                    localStorage.setItem('isContentVisible', $("#collapseContent").is(':visible'));
                });
            });

            var isContentVisible2 = localStorage.getItem('isContentVisible2') === 'true';
            $("#collapseContent2").toggle(isContentVisible2);

            // 當按鈕被點擊時
            $("#btnToggleContent2").click(function () {
                // 切換內容的顯示與隱藏
                $("#collapseContent2").slideToggle(function () {
                    // 存儲展開/折疊狀態到本地存儲
                    localStorage.setItem('isContentVisible2', $("#collapseContent2").is(':visible'));
                });
            });

            var isContentVisible3 = localStorage.getItem('isContentVisible3') === 'true';
            $("#collapseContent3").toggle(isContentVisible3);

            // 當按鈕被點擊時
            $("#btnToggleContent3").click(function () {
                // 切換內容的顯示與隱藏
                $("#collapseContent3").slideToggle(function () {
                    // 存儲展開/折疊狀態到本地存儲
                    localStorage.setItem('isContentVisible3', $("#collapseContent3").is(':visible'));
                });
            });
        });

        ///////////////////////////////////////////////////////////////////////////////////////////
        //我建立的課程

        function firstLoad(pageNumber) {
            const divList = $('#divList');
            //讀取Json資料
            $.getJSON('/apiTClass/QueryByMember/?id=@(ViewBag.MemberId)', function (datas) {
                console.log(datas);

                // 獲得限定頁面資料
                const limitdatas = datas.slice((pageNumber - 1) * onePage, ((pageNumber - 1) * onePage) + onePage);
                console.log(datas.slice(0,8));

                // 做出一個空的容器來存放div
                const docFrag = $(document.createDocumentFragment());

                $.each(limitdatas, function (index, item) {
                    const Description = item.fDescription.length > 15 ? item.fDescription.substring(0, 30) + '...' : item.fDescription;
                    const card = $(
                        `<div class="mix col-lg-3 col-md-4 col-sm-6 genres">
                            <button class="btn btn-primary" style="width: 100%;" onclick="redirectToStudentPage(event, ${item.fClassId})">查看已購買學生</button>
                            <a href="/Class/Edit?id=${item.fClassId}">
                                <div style="position: relative;">
                                    <span style="position: absolute; top: 0; left: 0; background-color: ${new Date(item.fEnddate) <= new Date() ? 'gray' : 'red'}; color: white; padding: 5px; margin: 5px; display: ${new Date(item.fEnddate) <= new Date() || item.fCurrentStudent >= item.fMaxStudent || item.fCurrentStudent >= item.fMaxStudent - 5 ? 'block' : 'none'};">
                                        ${new Date(item.fEnddate) <= new Date() ? '已過期' : (item.fCurrentStudent >= item.fMaxStudent ? '已額滿' : (item.fCurrentStudent >= item.fMaxStudent - 5 ? '即將額滿' : ''))}
                                    </span>
                                    <img src="/img/classimg/${item.fThumbnailPath}" alt="">
                                    <span class="gss" data-course-type="${item.fOnLine === 0 ? 'offline' : 'online'}">
                                       ${item.fOnLine === 0 ? '實體課程' : '線上課程'}
                                    </span>
                                </div>
                                <div>
                                    <div class="ClassName">
                                        <h5>${item.fClassName}</h5>
                                    </div>
                                            <p>${Description}</p>
                                </div>
                                <div>
                                    <h5>導師：${item.fTeacherNmae}</h5>
                                    <p>點閱數：${item.fClick}</p>
                                </div>
                            </a>
                        </div>`
                    );
                    docFrag.append(card);
                });

                divList.html(docFrag);
            });
        }
        firstLoad(1);

        function load(pageNumber) {
            const divList = $('#divList')
            const sId = $('#selectSkill').val();
            const keyword = $('#txtKeyword').val(); // 新增的關鍵字搜尋
            const sOnLine = $('#selectOnLine').val();


            //讀取Json資料
            $.getJSON('/apiTClass/QueryByMember/?id=@(ViewBag.MemberId)', function (datas) {

                let filteredDatas = datas;

                if (sId != 0) {
                    filteredDatas = datas.filter(item => {
                        // 在此添加筛选条件
                        return item.fSkillId == sId;
                    });
                }
                //關鍵字篩選
                if (keyword) {
                    filteredDatas = filteredDatas.filter(item => {
                        // 在此添加關鍵字搜尋條件，例如在 fClassName 和 fDescription 中搜尋關鍵字
                        return item.fClassName.includes(keyword) || item.fDescription.includes(keyword);
                    });
                }
                //線上實體篩選
                if (sOnLine != 0) {
                    filteredDatas = filteredDatas.filter(item => {
                        //console.log("DD");
                        return item.fOnLine == sOnLine - 1;
                    });
                }

                dataCount = filteredDatas.length;

                // 獲得限定頁面資料
                const limitdatas = filteredDatas.slice((pageNumber - 1) * onePage, ((pageNumber - 1) * onePage) + onePage);
                //dataCount = filteredDatas.length;

                //做出一個空的容器來存放div
                const docFrag = $(document.createDocumentFragment())
                if (limitdatas['length'] === 0) {
                    const card = $(
                        `<div class="section-title mb-5 pb-4 container-fluid" style="display: flex; justify-content: center;">
                            <h3 class="mb-5">我的課程中沒有符合條件的課程</h3>
                         </div>`
                    );
                    docFrag.append(card);
                }
                $.each(limitdatas, function (index, item) {
                    const Description = item.fDescription.length > 15 ? item.fDescription.substring(0, 30) + '...' : item.fDescription;
                    const card = $(
                        `<div class="mix col-lg-3 col-md-4 col-sm-6 genres">
                            <button class="btn btn-primary" style="width: 100%;" onclick="redirectToStudentPage(event, ${item.fClassId})">查看已購買學生</button>
                            <a href="/Class/Edit?id=${item.fClassId}">
                                <div style="position: relative;">
                                    <span style="position: absolute; top: 0; left: 0; background-color: ${new Date(item.fEnddate) <= new Date() ? 'gray' : 'red'}; color: white; padding: 5px; margin: 5px; display: ${new Date(item.fEnddate) <= new Date() || item.fCurrentStudent >= item.fMaxStudent || item.fCurrentStudent >= item.fMaxStudent - 5 ? 'block' : 'none'};">
                                        ${new Date(item.fEnddate) <= new Date() ? '已過期' : (item.fCurrentStudent >= item.fMaxStudent ? '已額滿' : (item.fCurrentStudent >= item.fMaxStudent - 5 ? '即將額滿' : ''))}
                                    </span>
                                    <img src="/img/classimg/${item.fThumbnailPath}" alt="">
                                            <span class="gss" data-course-type="${item.fOnLine === 0 ? 'offline' : 'online'}">
                                                    ${item.fOnLine === 0 ? '實體課程' : '線上課程'}
                                                 </span>
                                </div>
                                <div>
                                    <div class="ClassName">
                                        <h5>${item.fClassName}</h5>
                                    </div>
                                            <p>${Description}</p>
                                </div>
                                <div>
                                    <h5>導師：${item.fTeacherNmae}</h5>
                                    <p>點閱數：${item.fClick}</p>
                                </div>
                            </a>
                        </div>`
                    );
                    docFrag.append(card);
                });
                divList.html(docFrag)//.html()一次將全部的資料都上傳
            });
        };

        //分頁按鈕
        async function loadPage() {
            const Id = @(ViewBag.MemberId)
            const url = `@Url.Content("~/apiTClass/QueryByMember/?id=${Id}")`;
            const response = await fetch('../../../apiTClass/QueryByMember/?id=@(ViewBag.MemberId)');
            const data = await response.json();
            //console.log(data);
            // 獲取所選風格的ID
            const sId = $('#selectSkill').val();
            const keyword = $('#txtKeyword').val();

            // 根據所選風格篩選數據
            let filteredData = data;
            if (sId != 0) {
                filteredData = data.filter(item => item.fSkillId == sId);
            }
            //關鍵字篩選
            if (keyword != '') {
                filteredData = filteredData.filter(item => {
                    // 在此添加關鍵字搜尋條件，例如在 fClassName 和 fDescription 中搜尋關鍵字
                    return item.fClassName.includes(keyword) || item.fDescription.includes(keyword);
                });
            }
            const dataCount = filteredData.length;//有幾筆資料
            const pageCount = Math.ceil(dataCount / onePage);//有幾頁
            // 清空現有按鈕
            pageButtonsContainer.empty();
            for (let i = 1; i <= pageCount; i++) {
                let button = $(`<button class="btn btn-secondary mr-2">${i}</button>`);
                button.click(function () {
                    load(i);//加載第i頁
                });
                pageButtonsContainer.append(button);
            }
        }
        

        ///////////////////////////////////////////////////////////////////////////////////////////
        //我買的課程

        function firstLoad2(pageNumber) {
            const divList = $('#divList2');
            //讀取Json資料
            $.getJSON('/apiTClass/AddCurrentStudent/?id=@(ViewBag.MemberId)', function (datas) {
                //console.log(datas);

                // 獲得限定頁面資料
                const limitdatas = datas.slice((pageNumber - 1) * onePage, ((pageNumber - 1) * onePage) + onePage);

                // 做出一個空的容器來存放div
                const docFrag = $(document.createDocumentFragment());
                if (limitdatas['length'] === 0) {
                    const card = $(
                        `<div class="section-title mb-5 pb-4 container-fluid" style="display: flex; justify-content: center;">
                            <h3 class="mb-5">我還沒買任何課程</h3>
                         </div>`
                    );
                    docFrag.append(card);
                }
                $.each(limitdatas, function (index, item) {
                    const Description = item.fDescription.length > 15 ? item.fDescription.substring(0, 30) + '...' : item.fDescription;
                    const card = $(
                        `<div class="mix col-lg-3 col-md-4 col-sm-6 genres">
                            <button class="btn btn-primary" style="width: 100%;" onclick="confirmAndRedirectToDelDeal(event, ${item.fClassId})">退出課程</button>
                            <a href="/Class/Viewclass?id=${item.fClassId}">
                                <div style="position: relative;">
                                    <span style="position: absolute; top: 0; left: 0; background-color: ${new Date(item.fEnddate) <= new Date() ? 'gray' : 'red'}; color: white; padding: 5px; margin: 5px; display: ${new Date(item.fEnddate) <= new Date() || item.fCurrentStudent >= item.fMaxStudent || item.fCurrentStudent >= item.fMaxStudent - 5 ? 'block' : 'none'};">
                                        ${new Date(item.fEnddate) <= new Date() ? '已過期' : (item.fCurrentStudent >= item.fMaxStudent ? '已額滿' : (item.fCurrentStudent >= item.fMaxStudent - 5 ? '即將額滿' : ''))}
                                    </span>
                                    <img src="/img/classimg/${item.fThumbnailPath}" alt="">
                                    <span class="gss" data-course-type="${item.fOnLine === 0 ? 'offline' : 'online'}">
                                       ${item.fOnLine === 0 ? '實體課程' : '線上課程'}
                                    </span>
                                </div>
                                <div>
                                    <div class="ClassName">
                                        <h5>${item.fClassName}</h5>
                                    </div>
                                    <p>${Description}</p>
                                </div>
                                <div>
                                    <h5>導師：${item.fTeacherNmae}</h5>
                                    <p>點閱數：${item.fClick}</p>
                                </div>
                            </a>
                         </div>`
                    );
                    docFrag.append(card);
                });

                divList.html(docFrag);
            });
        }
        firstLoad2(1);

        function load2(pageNumber) {
            const divList = $('#divList2')
            const sId = $('#selectSkill2').val();
            const keyword = $('#txtKeyword2').val(); // 新增的關鍵字搜尋
            const sOnLine = $('#selectOnLine2').val();


            //讀取Json資料
            $.getJSON('/apiTClass/AddCurrentStudent/?id=@(ViewBag.MemberId)', function (datas) {

                let filteredDatas = datas;

                if (sId != 0) {
                    filteredDatas = datas.filter(item => {
                        // 在此添加筛选条件
                        return item.fSkillId == sId;
                    });
                }
                //關鍵字篩選
                if (keyword) {
                    filteredDatas = filteredDatas.filter(item => {
                        // 在此添加關鍵字搜尋條件，例如在 fClassName 和 fDescription 中搜尋關鍵字
                        return item.fClassName.includes(keyword) || item.fDescription.includes(keyword);
                    });
                }
                //線上實體篩選
                if (sOnLine != 0) {
                    filteredDatas = filteredDatas.filter(item => {
                        //console.log("DD");
                        return item.fOnLine == sOnLine - 1;
                    });
                }

                dataCount = filteredDatas.length;

                // 獲得限定頁面資料
                const limitdatas = filteredDatas.slice((pageNumber - 1) * onePage, ((pageNumber - 1) * onePage) + onePage);
                //dataCount = filteredDatas.length;

                //做出一個空的容器來存放div
                const docFrag = $(document.createDocumentFragment())
                if (limitdatas['length'] === 0) {
                    const card = $(
                        `<div class="section-title mb-5 pb-4 container-fluid" style="display: flex; justify-content: center;">
                                    <h3 class="mb-5">我買的課程中沒有符合條件的課程</h3>
                                 </div>`
                    );
                    docFrag.append(card);
                }
                $.each(limitdatas, function (index, item) {
                    const Description = item.fDescription.length > 15 ? item.fDescription.substring(0, 30) + '...' : item.fDescription;
                    const card = $(
                        `<div class="mix col-lg-3 col-md-4 col-sm-6 genres">
                            <a href="/Class/Viewclass?id=${item.fClassId}">
                                <button class="btn btn-primary" style="width: 100%;" onclick="confirmAndRedirectToDelDeal(event, ${item.fClassId})">退出課程</button>
                                <div style="position: relative;">
                                    <span style="position: absolute; top: 0; left: 0; background-color: ${new Date(item.fEnddate) <= new Date() ? 'gray' : 'red'}; color: white; padding: 5px; margin: 5px; display: ${new Date(item.fEnddate) <= new Date() || item.fCurrentStudent >= item.fMaxStudent || item.fCurrentStudent >= item.fMaxStudent - 5 ? 'block' : 'none'};">
                                        ${new Date(item.fEnddate) <= new Date() ? '已過期' : (item.fCurrentStudent >= item.fMaxStudent ? '已額滿' : (item.fCurrentStudent >= item.fMaxStudent - 5 ? '即將額滿' : ''))}
                                    </span>
                                    <img src="/img/classimg/${item.fThumbnailPath}" alt="">
                                    <span class="gss" data-course-type="${item.fOnLine === 0 ? 'offline' : 'online'}">
                                       ${item.fOnLine === 0 ? '實體課程' : '線上課程'}
                                    </span>
                                </div>
                                <div>
                                    <div class="ClassName">
                                        <h5>${item.fClassName}</h5>
                                    </div>
                                    <p>${Description}</p>
                                </div>
                                <div>
                                    <h5>導師：${item.fTeacherNmae}</h5>
                                    <p>點閱數：${item.fClick}</p>
                                </div>
                            </a>
                         </div>`
                    );
                    docFrag.append(card);
                });
                divList.html(docFrag)//.html()一次將全部的資料都上傳
            });
        };


        //分頁按鈕
        async function loadPage2() {
            const Id = @(ViewBag.MemberId)
            const url = `@Url.Content("~/apiTClass/AddCurrentStudent/?id=${Id}")`;
            const response = await fetch('../../../apiTClass/AddCurrentStudent/?id=@(ViewBag.MemberId)');
            const data = await response.json();
            //console.log(data);
            // 獲取所選風格的ID
            const sId = $('#selectSkill2').val();
            const keyword = $('#txtKeyword2').val();

            // 根據所選風格篩選數據
            let filteredData = data;
            if (sId != 0) {
                filteredData = data.filter(item => item.fSkillId == sId);
            }
            //關鍵字篩選
            if (keyword != '') {
                filteredData = filteredData.filter(item => {
                    // 在此添加關鍵字搜尋條件，例如在 fClassName 和 fDescription 中搜尋關鍵字
                    return item.fClassName.includes(keyword) || item.fDescription.includes(keyword);
                });
            }
            const dataCount = filteredData.length;//有幾筆資料
            const pageCount = Math.ceil(dataCount / onePage);//有幾頁
            // 清空現有按鈕
            pageButtonsContainer2.empty();
            for (let i = 1; i <= pageCount; i++) {
                let button = $(`<button class="btn btn-secondary mr-2">${i}</button>`);
                button.click(function () {
                    load2(i);//加載第i頁
                });
                pageButtonsContainer2.append(button);
            }
        }
        

        ///////////////////////////////////////////////////////////////////////////////////////////
        //我的最愛

        function firstLoad3(pageNumber) {
            const divList = $('#divList3');
            //讀取Json資料
            $.getJSON('/apiTClass/FavById/?id=@(ViewBag.MemberId)', function (datas) {
                //console.log(datas);

                // 獲得限定頁面資料
                const limitdatas = datas.slice((pageNumber - 1) * onePage, ((pageNumber - 1) * onePage) + onePage);

                // 這裡每次回傳的卡片順序都是亂的，只能先排好順序
                // 建立 Promise 數組，每個 Promise 對應一個非同步請求
                const promises = limitdatas.map(item => new Promise(resolve => {
                    checkIfFavorite(item.fClassId, isFavorite => {
                        const loveImgSrc = isFavorite ? '/img/classimg/love.PNG' : '/img/classimg/notlove.PNG';

                        const Description = item.fDescription.length > 30 ? item.fDescription.substring(0, 30) + '...' : item.fDescription;
                        //console.log(item);
                        const card = $(
                            `<div class="mix col-lg-3 col-md-4 col-sm-6 genres">
                                         <a href="/Class/Viewclass?id=${item.fClassId}">
                                             <div style="position: relative;">
                                                 <span style="position: absolute; top: 0; left: 0; background-color: red; color: white; padding: 5px; margin: 5px; ${item.fCurrentStudent >= item.fMaxStudent - 5 ? '' : 'display: none;'}">
                                                     ${item.fCurrentStudent >= item.fMaxStudent ? '已額滿' : (item.fCurrentStudent >= item.fMaxStudent - 5 ? '即將額滿' : '')}
                                                 </span>
                                                 <img src="/img/classimg/${item.fThumbnailPath}" alt="">
                                                         <span class="gss" data-course-type="${item.fOnLine === 0 ? 'offline' : 'online'}">
                                                    ${item.fOnLine === 0 ? '實體課程' : '線上課程'}
                                                 </span>
                                             </div>
                                             <div>
                                                 <div class="ClassName">
                                                     <h5>${item.fClassName}</h5>
                                                 </div>
                                                 <p>${Description}</p>
                                             </div>
                                             <div>
                                                 <h5>導師：${item.fTeacherNmae}</h5>
                                                 <h6>地點：${item.fSiteName}</h6>
                                                 <p>點閱數：${item.fClick}</p>
                                             </div>
                                         </a>
                                         <button class="favorite-button" data-classid="${item.fClassId}">
                                             <img src="${loveImgSrc}" class="favorite-icon" style="width: 32px; height: 30px;" />
                                         </button>
                                     </div>`
                        );
                        resolve(card);
                    });
                }));


                // 使用 Promise.all 確保所有非同步請求都完成後再進行排序和渲染
                Promise.all(promises)
                    .then(cards => {
                        if (cards['length'] === 0) {
                            const docFrag = $(document.createDocumentFragment());
                            const card = $(
                                `<div class="section-title mb-5 pb-4 container-fluid" style="display: flex; justify-content: center;">
                                            <h3 class="mb-5">我的最愛中沒有符合條件的課程</h3>
                                         </div>`
                            );
                            console.log("沒資料");
                            docFrag.append(card);
                            divList.html(docFrag);
                        } else {
                            // 根據 fClassId 屬性排序卡片
                            cards.sort((a, b) => a[0].fClassId - b[0].fClassId);
                            // 渲染卡片
                            divList.html(cards.map(card => card[0]));
                        }
                    });
            });
        }
        firstLoad3(1);

        function load3(pageNumber) {
            const divList = $('#divList3')
            const sId = $('#selectSkill3').val();
            const keyword = $('#txtKeyword3').val(); // 新增的關鍵字搜尋
            const sOnLine = $('#selectOnLine3').val();


            $.getJSON('/apiTClass/FavById/?id=@(ViewBag.MemberId)', function (datas) {

                let filteredDatas = datas;

                if (sId != 0) {
                    filteredDatas = datas.filter(item => {
                        // 在此添加筛选条件
                        return item.fSkillId == sId;
                    });
                }
                //關鍵字篩選
                if (keyword) {
                    filteredDatas = filteredDatas.filter(item => {
                        // 在此添加關鍵字搜尋條件，例如在 fClassName 和 fDescription 中搜尋關鍵字
                        return item.fClassName.includes(keyword) || item.fDescription.includes(keyword);
                    });
                }
                //線上實體篩選
                if (sOnLine != 0) {
                    filteredDatas = filteredDatas.filter(item => {
                        // 在此添加關鍵字搜尋條件，例如在 fClassName 和 fDescription 中搜尋關鍵字
                        return item.fOnLine == sOnLine - 1;
                    });
                }

                dataCount = filteredDatas.length;

                //獲得限定頁面資料
                const limitdatas = filteredDatas.slice((pageNumber - 1) * onePage, ((pageNumber - 1) * onePage) + onePage);

                // 這裡每次回傳的卡片順序都是亂的，只能先排好順序
                // 建立 Promise 數組，每個 Promise 對應一個非同步請求
                const promises = limitdatas.map(item => new Promise(resolve => {
                    checkIfFavorite(item.fClassId, isFavorite => {

                        const loveImgSrc = isFavorite ? '/img/classimg/love.PNG' : '/img/classimg/notlove.PNG';

                        const Description = item.fDescription.length > 30 ? item.fDescription.substring(0, 30) + '...' : item.fDescription;

                        const card = $(
                            `<div class="mix col-lg-3 col-md-4 col-sm-6 genres">
                                        <a href="/Class/Viewclass?id=${item.fClassId}">
                                            <div>
                                                <span style="position: absolute; top: 0; left: 0; background-color: red; color: white; padding: 5px; margin: 5px; ${item.fCurrentStudent >= item.fMaxStudent - 5 ? '' : 'display: none;'}">
                                                    ${item.fCurrentStudent >= item.fMaxStudent ? '已額滿' : (item.fCurrentStudent >= item.fMaxStudent - 5 ? '即將額滿' : '')}
                                                </span>
                                                <img src="/img/classimg/${item.fThumbnailPath}" alt="">
                                                        <span class="gss" data-course-type="${item.fOnLine === 0 ? 'offline' : 'online'}">
                                                    ${item.fOnLine === 0 ? '實體課程' : '線上課程'}
                                                 </span>
                                            </div>
                                            <div>
                                                <div class="ClassName">
                                                    <h5>${item.fClassName}</h5>
                                                </div>
                                                        <p>${Description}</p>
                                            </div>
                                            <div>
                                                <h5>導師：${item.fTeacherNmae}</h5>
                                                <h6>地點：${item.fSiteName}</h6>
                                                <p>點閱數：${item.fClick}</p>
                                            </div>
                                        </a>
                                        <button class="favorite-button" data-classid="${item.fClassId}">
                                             <img src="${loveImgSrc}" class="favorite-icon" style="width: 32px; height: 30px;" />
                                        </button>
                                    </div>`
                        );
                        resolve(card);
                    });
                }));

                // 使用 Promise.all 確保所有非同步請求都完成後再進行排序和渲染
                Promise.all(promises)
                    .then(cards => {
                        //console.log(cards);
                        // 如果資料為空，顯示提示訊息
                        if (cards['length'] === 0) {
                            const docFrag = $(document.createDocumentFragment());
                            const card = $(
                                `<div class="section-title mb-5 pb-4 container-fluid" style="display: flex; justify-content: center;">
                                            <h3 class="mb-5">我的最愛中沒有符合條件的課程</h3>
                                 </div>`
                            );
                            console.log("沒資料");
                            docFrag.append(card);
                            divList.html(docFrag);
                        } else {
                            // 根據 fClassId 屬性排序卡片
                            cards.sort((a, b) => a[0].fClassId - b[0].fClassId);
                            // 渲染卡片
                            divList.html(cards.map(card => card[0]));
                        }
                    });
            })
        };
        // 檢查是否為最愛课程
        function checkIfFavorite(classId, callback) {
            //接收classId，回傳callback
            $.getJSON(`/apiTClass/classFav/${classId}`, function (datas2) {
                //取得這堂課有誰喜歡
                let isFavorite = false;
                $.each(datas2, function (index, item) {
                    if (MemberId == item) {
                        isFavorite = true;//如果登入者喜歡就為true
                    }
                });
                callback(isFavorite);
            });
        }
        $(document).on('click', '.favorite-button', function () {
            // 獲取點擊的按鈕的 data-classid
            const button = $(this);
            const classId = button.data('classid');

            // 獲取按鈕內的圖片元素
            const img = button.find('.favorite-icon');
            const src = img.attr('src');

            // 根據 src 的不同調用不同的 API
            if (src === '/img/classimg/notlove.PNG') {
                console.log("新增");
                createFavorite(classId, img);
            } else if (src === '/img/classimg/love.PNG') {
                console.log("刪除");
                deleteFavorite(classId, img);
            }
        });
        // 新增 createFavorite 函數
        function createFavorite(classId, img) {
            // 呼叫 apiTClassFavs/Create 方法新增一筆 TClassFav 資料
            $.ajax({
                url: `/apiTClass/CreateFav?classId=${classId}`,
                method: 'POST',
                success: function () {
                    // 成功後更新圖片的 src
                    img.attr('src', '/img/classimg/love.PNG');
                },
                error: function () {
                    console.error('Error creating favorite.');
                }
            });
        }
        // 新增 deleteFavorite 函數
        function deleteFavorite(classId, img) {
            // 呼叫 apiTClassFavs/Delete 方法刪除一筆 TClassFav 資料
            $.ajax({
                url: `/apiTClass/DeleteFav?classId=${classId}`,
                method: 'POST',
                success: function () {
                    // 成功後更新圖片的 src
                    img.attr('src', '/img/classimg/notlove.PNG');
                },
                error: function () {
                    console.error('Error deleting favorite.');
                }
            });
        }

        //分頁按鈕
        async function loadPage3() {
            const Id = @(ViewBag.MemberId)
                            const url = `@Url.Content("~/apiTClass/FavById/?id=${Id}")`;
            const response = await fetch('../../../apiTClass/FavById/?id=@(ViewBag.MemberId)');
            const data = await response.json();
            //console.log(data);
            // 獲取所選風格的ID
            const sId = $('#selectSkill3').val();
            const keyword = $('#txtKeyword3').val();

            // 根據所選風格篩選數據
            let filteredData = data;
            if (sId != 0) {
                filteredData = data.filter(item => item.fSkillId == sId);
            }
            //關鍵字篩選
            if (keyword != '') {
                filteredData = filteredData.filter(item => {
                    // 在此添加關鍵字搜尋條件，例如在 fClassName 和 fDescription 中搜尋關鍵字
                    return item.fClassName.includes(keyword) || item.fDescription.includes(keyword);
                });
            }
            const dataCount = filteredData.length;//有幾筆資料
            const pageCount = Math.ceil(dataCount / onePage);//有幾頁
            // 清空現有按鈕
            pageButtonsContainer3.empty();
            for (let i = 1; i <= pageCount; i++) {
                let button = $(`<button class="btn btn-secondary mr-2">${i}</button>`);
                button.click(function () {
                    load3(i);//加載第i頁
                });
                pageButtonsContainer3.append(button);
            }
        }


        ///////////////////////////////////////////////////////////////////////////////////////////


        //開網頁時觸發
        window.onload = function () {
            loadPage();
            loadPage2();
            loadPage3();
        };

        //Skill選擇器
        async function loadStyle() {
            const response = await fetch('@Url.Content("~/apiTSkills/OnlyIdName")');//從哪裡取得
            const data = await response.json();//接收回傳的資料
            const defaultOption = '<option value="0">請選擇類別</option>';
            const styleOptions = data.map(s => `<option value="${s.fSkillId}">${s.fName}</option>`);//要把取得的資料作什麼加工
            styleOptions.unshift(defaultOption);
            selStyle.innerHTML = styleOptions.join("");//加入到指定的位置
            selStyle2.innerHTML = styleOptions.join("");//加入到指定的位置
            selStyle3.innerHTML = styleOptions.join("");//加入到指定的位置
        }
        loadStyle();//啟動

        //搜尋按鈕
        $('#btnSearch').click(function () {
            //讀取條件篩選後第一頁,重新讀取分頁頁碼
            load(1);
            loadPage();
            //$('#txtKeyword').val('');
        });
        $('#btnSearch2').click(function () {
            //讀取條件篩選後第一頁,重新讀取分頁頁碼
            load2(1);
            loadPage2();
        });
        $('#btnSearch3').click(function () {
            //讀取條件篩選後第一頁,重新讀取分頁頁碼
            load3(1);
            loadPage3();
        });

        //跑到建立新課程頁面
        async function CheckLoginAndNavigate() {
                window.location.href = "@Url.Action("Create", "Class")";
        }

        //▲回到上方
        document.addEventListener("DOMContentLoaded", function () {
            var scrollToTopBtn = document.getElementById("scrollToTopBtn");

            window.onscroll = function () {
                // 顯示或隱藏按鈕根據滾動位置
                if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                    scrollToTopBtn.style.display = "block";
                } else {
                    scrollToTopBtn.style.display = "none";
                }
            };

            scrollToTopBtn.addEventListener("click", function () {
                // 捲動到頁面頂部
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
            });
        });

        //查看已購買學生
        function redirectToStudentPage(event, classId) {
            // 阻止事件冒泡
            event.stopPropagation();

            // 使用 jQuery AJAX 進行後端查詢
            $.ajax({
                type: 'GET',
                url: '/Class/CheckDealClass?id=' + classId,
                success: function (result) {
                    if (result) {
                        // 如果有結果，表示可以跳轉頁面
                        window.location.href = `/Class/studentEdit?id=${classId}`;
                    } else {
                        // 如果沒有結果，可以選擇執行其他操作或顯示提示
                        alert('沒有學生購買該課程');
                    }
                },
                error: function () {
                    // 處理錯誤情況
                    alert('查詢失敗。');
                }
            });
        }

        //確定要退出課程嗎
        function confirmAndRedirectToDelDeal(event, classId) {
            // 阻止事件冒泡
            event.stopPropagation();

            // 使用 confirm 函數顯示確認提示框
            var confirmResult = confirm('確定要退出課程嗎？');

            if (confirmResult) {
                // 用戶確認後，執行 DelDeal 操作
                redirectToDelDeal(classId);
                location.reload();
            } else {
                // 用戶取消，不執行任何操作
            }
        }

        // 使用 jQuery 刪除TDealClassDetails
        function redirectToDelDeal(classId) {
            // 使用 jQuery AJAX 進行後端操作
            $.ajax({
                type: 'POST',
                url: '/apiTClass/DelDeal',
                data: { id: @ViewBag.MemberId, classId: classId },
                success: function (result) {
                    // 處理成功的情況，這裡可以根據需要進行其他操作
                    alert(result);
                },
                error: function () {
                    // 處理錯誤情況
                    alert('刪除失敗。');
                }
            });
        }

	</script>
}