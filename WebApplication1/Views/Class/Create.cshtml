@model prjMusicBetter.Models.TClass

@{
    ViewData["Title"] = "Create";
}
<style>
    #fDescription {
    height: 200px; /* 設定合適的高度，你可以根據需要調整 */
    resize: vertical; /* 允許垂直調整大小 */
    overflow-y: auto; /* 在高度不足時顯示垂直滾動條 */
        position: absolute;
    }
    /*留空白用的*/
    .pad {
        padding-top: 20px; /* 設置上邊距擴展的像素值 */
        padding-bottom: 20px; /* 設置下邊距擴展的像素值 */
    }
</style>
<!-- Contact section -->
<!-- 在<body>標籤內引入CKEditor 5腳本 -->
<script src="https://cdn.ckeditor.com/ckeditor5/40.1.0/classic/ckeditor.js"></script>

<section class="contact-section">
    <div class="container-fluid">
        <div class="contact-warp">
            <div class="section-title mb-0">
                <h2>新建課程</h2>
            </div>
            <form id="classForm" method="post" class="contact-from col-lg-8" onsubmit="return validateForm()">
                <div class="row">
                    <input type="hidden" id="fTeacherID" name="fTeacherID" value="@ViewBag.MemberId" />
                    <div class="col-md-6 pad">
                        <label for="fClassName">課程名稱:</label>
                        <input type="text" id="fClassName" name="fClassName" required />
                    </div>
                    <div class="col-md-6 pad">
                        <label for="fPrice">單堂價格:</label>
                        <input type="number" id="fPrice" name="fPrice" required />
                    </div>
                    <div class="col-md-12">
                        <label for="fDescription">課程說明:</label>
                        <textarea id="fDescription" name="fDescription" required></textarea>
                    </div>
                    <div class="col-md-6">
                        <label for="fStartdate">開始日期:</label>
                        <input type="datetime-local" id="fStartdate" name="fStartdate" required />
                    </div>
                    <div class="col-md-6">
                        <label for="fEnddate">結束日期:</label>
                        <input type="datetime-local" id="fEnddate" name="fEnddate" required />
                    </div>
                    <div class="col-md-12 pad" id="siteContainer">
                            <label for="fSiteID">上課地點:</label>
                            <div>
                                <input type="hidden" id="fSiteID" name="fSiteID" value="1" />
                                <select id="fSiteName" name="fSiteName" required></select>
                            <button type="button" id="btnAddSite" class="btn btn-primary">新增場地</button>
                            </div>
                    </div>
                    <div class="col-md-6 pad">
                        <label for="fOnLine">上課方式:</label>
                        <input type="hidden" id="fOnLine" name="fOnLine" value="0" />
                        <select id="fifOnLine" name="fifOnLine" required>
                            <option value="0">實體課程</option>
                            <option value="1">線上課程</option>
                        </select><br />
                    </div>
                    <div class="col-md-6 pad">
                        <label for="fSkillID">課程類型:</label>
                        <input type="hidden" id="fSkillID" name="fSkillID" value="1" />
                        <select id="fName" name="fName" required></select><br />
                    </div>
                    <div class="col-md-12 pad">
                        <label for="fMaxStudent">課程人數:</label>
                        <input type="text" id="fMaxStudent" name="fMaxStudent" required value="0"/>
                    </div>
                    <div class="col-md-12 pad">
                        <label for="formFile">圖片:</label>
                        <input type="file" id="formFile" name="formFile" accept="image/*" />
                        <img id="imgPreview" src="~/img/classimg/class_bg.jpg" style="border-radius:10px; max-width: 400px; max-height: 400px;">
                    </div>
                    <input type="hidden" id="FCurrentStudent" name="FCurrentStudent" value="0" />
                    <div class="col-md-12 pad">
                        <button id="buttonSubmit" type="submit" class="btn btn-primary">確定建立</button>
                    </div>
                </div>
            </form>
            <div class="col-md-12 pad">
                <button id="btnFillDefaults" type="button" class="btn btn-secondary">填入預設資料</button>
            </div>
            <input type="hidden" id="btnAddSiteClicked" name="btnAddSiteClicked" value="false" />
        </div>
    </div>
</section>
<!-- Contact end -->


<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        //頁面初始設定
        // 將<textarea>元素轉換為CKEditor 5編輯器
        //新建場地
        document.addEventListener('DOMContentLoaded', function () {
            // 將<textarea>元素轉換為CKEditor 5編輯器
            ClassicEditor
                .create(document.querySelector('#fDescription'))
                .then(editor => {
                    editorInstance = editor; // 賦值 CKEditor 實例給全局變數
                })
                .catch(error => {
                    console.error(error);
                });


            //新建場地///////////////////////////////////////////////////

            const btnAddSite = document.getElementById('btnAddSite');
            const siteContainer = document.getElementById('siteContainer');
            const originalSelect = document.getElementById('fSiteName');


            // 全域變數 inputAddress，避免重新宣告
            const inputAddress = document.getElementById('fAddress');
            const selectAdditional = document.getElementById('additionalSelect');

            //新增場地按鈕
            btnAddSite.addEventListener('click', function () {

                // 在動態添加場地的地方，設置 btnAddSiteClicked 為 true
                document.getElementById('btnAddSiteClicked').value = 'true';

                // 清空 siteContainer 的內容
                siteContainer.innerHTML = '';

                // 動態添加場地相關元素
                const inputMemberID = document.createElement('input');
                inputMemberID.type = 'hidden';
                inputMemberID.name = 'fMemberID';
                inputMemberID.value = '@ViewBag.MemberId';

                const selectCityID = document.createElement('select');
                selectCityID.id = 'fCityID';
                selectCityID.name = 'fCityID';
                selectCityID.required = true;

                // 獲取城市數據
                fetch('@Url.Content("~/Place/GetCities")')
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(city => {
                            const option = document.createElement('option');
                            option.value = String(city.fCityId);
                            option.text = city.fCity;
                            selectCityID.appendChild(option);
                        });
                    });

                const labelSiteName = document.createElement('label');
                labelSiteName.for = 'fSiteName';
                labelSiteName.textContent = '請輸入地點名稱';

                const inputSiteName = document.createElement('input');
                inputSiteName.type = 'text';
                inputSiteName.id = 'fSiteName';
                inputSiteName.name = 'fSiteName';
                inputSiteName.required = true;

                const labelAddress = document.createElement('label');
                labelAddress.for = 'fAddress';
                labelAddress.textContent = '請輸入地點地址';

                const inputAddress = document.createElement('input');
                inputAddress.type = 'text';
                inputAddress.id = 'fAddress';
                inputAddress.name = 'fAddress';
                inputAddress.required = true;

                // 直接使用全域變數，避免重新宣告
                inputAddress.type = 'text';
                inputAddress.required = true;

                const selectAdditional = document.createElement('select');
                selectAdditional.id = 'additionalSelect';
                selectAdditional.name = 'additionalSelect';

                // 在第三個 select 中添加特定選項
                const additionalOptions = [
                    { value: '1', text: '錄音室' },
                    { value: '2', text: '音樂教室' },
                    { value: '3', text: '其他' }
                ];

                additionalOptions.forEach(optionData => {
                    const option = document.createElement('option');
                    option.value = optionData.value;
                    option.text = optionData.text;
                    selectAdditional.appendChild(option);
                });

                const btnConfirmAddSite = document.createElement('button');
                btnConfirmAddSite.textContent = '確認新增場地';
                btnConfirmAddSite.className = 'btn btn-success ml-2 mr-2';


                const btnCancelAddSite = document.createElement('button');
                btnCancelAddSite.textContent = '取消新增場地';
                btnCancelAddSite.className = 'btn btn-danger mr-2';
                btnCancelAddSite.addEventListener('click', cancelAddSite);


                // 添加元素到容器中
                siteContainer.appendChild(inputMemberID);
                siteContainer.appendChild(labelSiteName);
                siteContainer.appendChild(inputSiteName);
                siteContainer.appendChild(labelAddress);
                siteContainer.appendChild(inputAddress);
                siteContainer.appendChild(selectCityID);
                siteContainer.appendChild(selectAdditional);
                siteContainer.appendChild(btnConfirmAddSite);
                siteContainer.appendChild(btnCancelAddSite);

                // 隱藏原有的 fSiteName 元素
                originalSelect.style.display = 'none';
                btnAddSite.style.display = 'none';

                //檢查必填項目是否都已填寫
                btnConfirmAddSite.addEventListener('click', function () {
                    // 檢查所有新增場地的項目是否都填寫了資料
                    if (validateAddSiteFields()) {
                        // 如果都有資料，則執行 confirmAddSite
                        confirmAddSite();
                    } else {
                        // 如果有任何一個項目沒有填寫資料，顯示警告
                        alert('請填寫所有新增場地項目');
                    }
                });
            });

            
            // 新增場地時的函數，用於檢查所有新增場地的項目是否都填寫了資料
            function validateAddSiteFields() {
                const inputSiteNameValue = document.getElementById('fSiteName').value;
                const inputAddressValue = document.getElementById('fAddress').value;
                const selectedCityID = document.getElementById('fCityID').value;
                const selectAdditionalValue = document.getElementById('additionalSelect').value;

                // 檢查是否有任何一個項目沒有填寫資料
                if (!inputSiteNameValue || !inputAddressValue || !selectedCityID || !selectAdditionalValue) {
                    return false; // 有缺少資料的項目，返回 false
                }

                // 如果都有資料，返回 true
                return true;
            }

            //按下確認新增場地
            function confirmAddSite() {
                // 在最後設置 btnAddSiteClicked 為 false
                document.getElementById('btnAddSiteClicked').value = 'false';

                // 獲取相關表單數據
                const selectedCityID = document.getElementById('fCityID').value;
                const inputSiteNameValue = document.getElementById('fSiteName').value;
                const inputAddressValue = document.getElementById('fAddress').value;
                const selectAdditionalValue = document.getElementById('additionalSelect').value;
                const memberId = @ViewBag.MemberId;

                // 創建 FormData 對象
                const formData = new FormData();
                formData.append('fMemberID', memberId);
                formData.append('fCityID', selectedCityID);
                formData.append('fSiteName', inputSiteNameValue);
                formData.append('fAddress', inputAddressValue);
                formData.append('fSiteType', selectAdditionalValue);


                // 執行 AJAX 請求以將場地數據發送到控制器動作
                fetch('@Url.Content("~/apiTClass/CreateSite")', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        // 處理成功回應，獲取新場地的ID和Name
                        const newSiteID = data.fSiteId;
                        const newSiteName = data.fSiteName;

                        // 移除新增場地相關元件
                        const siteContainer = document.getElementById('siteContainer');
                        siteContainer.innerHTML = '';

                        // 重新加入元件
                        const labelSite = document.createElement('label');
                        labelSite.setAttribute('for', 'fSiteID');
                        labelSite.textContent = '上課地點:';

                        const inputSiteID = document.createElement('input');
                        inputSiteID.type = 'hidden';
                        inputSiteID.id = 'fSiteID';
                        inputSiteID.name = 'fSiteID';
                        inputSiteID.value = newSiteID;

                        const inputSiteName = document.createElement('input');
                        inputSiteName.type = 'text';
                        inputSiteName.id = 'fSiteName';
                        inputSiteName.name = 'fSiteName';
                        inputSiteName.value = newSiteName;

                        siteContainer.appendChild(labelSite);
                        siteContainer.appendChild(inputSiteID);
                        siteContainer.appendChild(inputSiteName);


                        // 更新原有的 fSiteID 元素的值為新場地的ID
                        document.getElementById('fSiteID').value = newSiteID;
                    })
                    .catch(error => {
                        // 處理錯誤，如果需要的話
                        console.error('錯誤:', error);
                    });
            }

            //按下取消新增場地
            function cancelAddSite() {
                // 重置 btnAddSiteClicked 為 false
                document.getElementById('btnAddSiteClicked').value = 'false';

                // 移除新增場地相關元件
                while (siteContainer.firstChild) {
                    siteContainer.removeChild(siteContainer.firstChild);
                }

                // 重新加入原本的元素
                const originalElements = document.createElement('div');
                originalElements.innerHTML = `
                <label for="fSiteID">上課地點:</label>
                <div>
                    <input type="hidden" id="fSiteID" name="fSiteID" value="1" />
                    <select id="fSiteName" name="fSiteName" required></select>
                    <button type="button" id="btnAddSite" class="btn btn-primary">新增場地</button>
                </div>
            `;

                siteContainer.appendChild(originalElements);

                // 重新綁定事件監聽器
                const btnAddSite = document.getElementById('btnAddSite');
                btnAddSite.addEventListener('click', function () {
                    // 在動態添加場地的地方，設置 btnAddSiteClicked 為 true
                    document.getElementById('btnAddSiteClicked').value = 'true';

                    // 清空 siteContainer 的內容
                    siteContainer.innerHTML = '';

                    // 動態添加場地相關元素
                    const inputMemberID = document.createElement('input');
                    inputMemberID.type = 'hidden';
                    inputMemberID.name = 'fMemberID';
                    inputMemberID.value = '@ViewBag.MemberId';

                    const selectCityID = document.createElement('select');
                    selectCityID.id = 'fCityID';
                    selectCityID.name = 'fCityID';
                    selectCityID.required = true;

                    // 獲取城市數據
                    fetch('@Url.Content("~/Place/GetCities")')
                        .then(response => response.json())
                        .then(data => {
                            data.forEach(city => {
                                const option = document.createElement('option');
                                option.value = String(city.fCityId);
                                option.text = city.fCity;
                                selectCityID.appendChild(option);
                            });
                        });

                    const labelSiteName = document.createElement('label');
                    labelSiteName.for = 'fSiteName';
                    labelSiteName.textContent = '請輸入地點名稱';

                    const inputSiteName = document.createElement('input');
                    inputSiteName.type = 'text';
                    inputSiteName.id = 'fSiteName';
                    inputSiteName.name = 'fSiteName';
                    inputSiteName.required = true;

                    const labelAddress = document.createElement('label');
                    labelAddress.for = 'fAddress';
                    labelAddress.textContent = '請輸入地點地址';

                    const inputAddress = document.createElement('input');
                    inputAddress.type = 'text';
                    inputAddress.id = 'fAddress';
                    inputAddress.name = 'fAddress';
                    inputAddress.required = true;

                    // 直接使用全域變數，避免重新宣告
                    inputAddress.type = 'text';
                    inputAddress.required = true;

                    const selectAdditional = document.createElement('select');
                    selectAdditional.id = 'additionalSelect';
                    selectAdditional.name = 'additionalSelect';

                    // 在第三個 select 中添加特定選項
                    const additionalOptions = [
                        { value: '1', text: '錄音室' },
                        { value: '2', text: '音樂教室' },
                        { value: '3', text: '其他' }
                    ];

                    additionalOptions.forEach(optionData => {
                        const option = document.createElement('option');
                        option.value = optionData.value;
                        option.text = optionData.text;
                        selectAdditional.appendChild(option);
                    });

                    const btnConfirmAddSite = document.createElement('button');
                    btnConfirmAddSite.textContent = '確認新增場地';
                    btnConfirmAddSite.className = 'btn btn-success ml-2 mr-2';


                    const btnCancelAddSite = document.createElement('button');
                    btnCancelAddSite.textContent = '取消新增場地';
                    btnCancelAddSite.className = 'btn btn-danger mr-2';
                    btnCancelAddSite.addEventListener('click', cancelAddSite);


                    // 添加元素到容器中
                    siteContainer.appendChild(inputMemberID);
                    siteContainer.appendChild(labelSiteName);
                    siteContainer.appendChild(inputSiteName);
                    siteContainer.appendChild(labelAddress);
                    siteContainer.appendChild(inputAddress);
                    siteContainer.appendChild(selectCityID);
                    siteContainer.appendChild(selectAdditional);
                    siteContainer.appendChild(btnConfirmAddSite);
                    siteContainer.appendChild(btnCancelAddSite);

                    // 隱藏原有的 fSiteName 元素
                    originalSelect.style.display = 'none';
                    btnAddSite.style.display = 'none';

                    //檢查必填項目是否都已填寫
                    btnConfirmAddSite.addEventListener('click', function () {
                        // 檢查所有新增場地的項目是否都填寫了資料
                        if (validateAddSiteFields()) {
                            // 如果都有資料，則執行 confirmAddSite
                            confirmAddSite();
                        } else {
                            // 如果有任何一個項目沒有填寫資料，顯示警告
                            alert('請填寫所有新增場地項目');
                        }
                    });
                });

                // 重新執行 load()
                load();
            }
        });


        //讓上課地點選項顯示fSiteName
        const SiteID = document.querySelector('#fSiteID');
        const SiteName = document.querySelector('#fSiteName');

        //讓課程類型選項顯示fName
        const SkillID = document.querySelector('#fSkillID');
        const SkillName = document.querySelector('#fName');

        var selectedValue = $('#fifOnLine').val();
        $('#fifOnLine').on('change', function () {
            // 获取当前选择的选项的 value
            var selectedValue = $(this).val();

            // 更新隐藏字段的值
            $('#fOnLine').val(selectedValue);

            // 输出选项的 value 到控制台（可选）
            console.log('Selected Value:', selectedValue);
        });


        // 獲取TSitesTSkill資料
        function load() {
            // 獲取TSites資料
            fetch('@Url.Content("~/Place/List")')
                .then(response => response.json())
                .then(data => {
                    const selectElement = document.getElementById('fSiteName');
                    data.forEach(site => {
                        const option = document.createElement('option');
                        option.value = String(site.fSiteId);  // 使用fSiteID作為值
                        option.text = site.fSiteName; // 顯示fSiteName
                        selectElement.appendChild(option);
                    });
                    // 添加 change 事件監聽器，當選擇改變時觸發
                    selectElement.addEventListener('change', function() {
                    // 將隱藏的 fSiteID 更新為所選擇的 fSiteID
                        SiteID.value = selectElement.value;
                    });
                });

            /////////////////////////////////////////////////////

            // 獲取TSkill資料
            fetch('@Url.Content("~/apiTSkills/OnlyIdName")')
                .then(response => response.json())
                .then(data => {
                    const selectElement = document.getElementById('fName');
                    data.forEach(skill => {
                        const option = document.createElement('option');
                        option.value = String(skill.fSkillId);  // 使用FSkillId作為值
                        option.text = skill.fName; // 顯示FName
                        selectElement.appendChild(option);
                        //console.log(data);
                    });
                    // 添加 change 事件監聽器，當選擇改變時觸發
                    selectElement.addEventListener('change', function() {
                    // 將隱藏的 fSkillID 更新為所選擇的 fSkillID
                        SkillID.value = selectElement.value;
                    });
                });
        }
        load();

        //檢查必填項目是否都已填寫///////////////////////////////////////////////////////////////////////
        
        function validateForm() {
            // 檢查必填項目是否都已填寫
            const requiredFields = document.querySelectorAll('[required]');
            let isValid = true;
            let isAlertShown = false; // 追踪警告是否已經顯示

            requiredFields.forEach(field => {
                if (!field.value.trim()) {
                    if (!isAlertShown) {
                        alert('請填寫所有項目');
                        isAlertShown = true; // 警告已經顯示
                    }
                    isValid = false;
                }
            });
            // 重置 isAlertShown，以便下次提交時再次顯示警告
            isAlertShown = false;
            return isValid;
        }


        //上傳資料///////////////////////////////////////////////////////////////////////

        const btn = document.querySelector('#buttonSubmit');
        btn.addEventListener('click', event => {

            event.preventDefault();//不讓submit運作

            // 檢查是否已經按下 "確認新增場地" 按鈕
            const addSiteButtonClicked = document.getElementById('btnAddSiteClicked').value === 'true';


            if (addSiteButtonClicked) {
                // 已經按下 "確認新增場地" 按鈕，禁止上傳
                alert('請填寫完整新增場地');
            }else{
                // 檢查是否存在 CKEditor 實例
                if (editorInstance) {
                    // 將 CKEditor 5 的內容設定為 textarea 的值
                    const descriptionTextarea = document.querySelector('#fDescription');
                    descriptionTextarea.value = editorInstance.getData();

                    if (validateForm()) {
                        // 傳整個 Form 的資料
                        const formData = new FormData(document.querySelector('#classForm'));

                        fetch('@Url.Content("~/apiTClass/Create")', {
                            method: 'POST',
                            body: formData
                        })
                            .then(response => {
                                if (response.ok) {
                                    alert("新增成功");
                                    location.href = '@Url.Content("~/Members/Memberclass")';
                                }
                            });
                    }
                } else {
                    console.error('CKEditor 實例不存在或未正確加載。');
                }
            }
        })

        //預覽圖片///////////////////////////////////////////////////////////////////////

        var arrayBuffer;
        $("#formFile").bind("change", function () {
            var file = this.files[0];
            var allowType = "image.*";
            if (file.type.match(allowType)) {
                //預覽
                var reader = new FileReader();
                reader.onload = function () {
                    arrayBuffer = this.result;
                    var blob = new Blob([arrayBuffer], {
                        type: "image/jpeg"
                    });
                    var urlCreator = window.URL || window.webkitURL;
                    var imageURL = urlCreator.createObjectURL(blob);
                    $("#imgPreview").attr("src", imageURL);
                };
                reader.readAsArrayBuffer(this.files[0]);
            }
            else {
                alert("不支援的檔案類型");
            }
        });


        //Demo用按鈕///////////////////////////////////////////////////////////////////////
        
        document.addEventListener('DOMContentLoaded', function () {
            // 找到填充默认数据的按钮
            const btnFillDefaults = document.getElementById('btnFillDefaults');

            // 添加点击事件处理程序
            btnFillDefaults.addEventListener('click', function () {
                // 填充默认数据
                document.getElementById('fClassName').value = "輕鬆學作曲！";
                document.getElementById('fPrice').value = 1200;
                // ... 填充其他字段的默认值

                // 更新 CKEditor 内容
                if (editorInstance) {
                    const defaultDescription = `
                                        <p>您是否曾哼過歌， 但下一秒， 又忘記那條美好旋律了呢？ 您是否腦中有好多聲響， 卻始終存留腦海裡， 說不出口呢？ 現在， 那些作曲家能做的事， 您也可以！ ・ Photo by Dayne Topkin on Unsplash</p>
                                        <h3>課程說明</h3>
                                        <ul>
                                            <li><strong>本課程適合什麼人？</strong><br>
                                                有基本音樂能力，懂得操作電腦，對各種音樂創作（歌曲、音樂劇歌曲、鋼琴曲、器樂曲或管弦樂曲等等）有興趣之無基礎初學者、進階學習者、興趣培養者與升學考試者（若有短期衝刺班計畫，費用則會視情況另計）。<br><br>&nbsp;
                                            </li>
                                            <li><strong>老師有什麼特色？</strong><br>
                                                可視情況中、英語授課，且<strong>老師很有耐心！</strong>因為我堅信：<strong>音樂是美好的！</strong>任何令人討厭音樂的理由，都是人為因素。我希望，學生可以討厭老師，但不要因此討厭音樂 QQ<br><br>&nbsp;</li><li><strong>我會學習到什麼？</strong><br>
                                                DAW的建立及軟體使用、基礎音樂能力（樂理、聽音、基本和聲進行與和弦概念）、基礎樂器學、樂曲及歌曲創作技巧與分析、各類樂曲及風格之仿作與實作、音樂製作產業之作業流程、各類音樂賞析及作曲家小知識等等。可依學生期許及學習目標客製化，彈性調整上課進度。<br><br>&nbsp;
                                            </li>
                                            <li><strong>我要帶什麼去上課？</strong><br>
                                                第一堂課將重點放在了解學生的程度，以及學生期許之學習目標。無基礎者，將由老師協助，從建立自己簡單的音樂工作站開始。有基礎者，可先將自己的筆電與作品帶來，讓老師了解學生的情況和特色。<strong>本課程建議要準備自己的DAW （Digital Audio Workstation），用以練習實作與創作，不限於PC或MAC。但若從軟體操作開始學習的話，建議使用Mac搭配Logic。</strong><br><br>&nbsp;
                                            </li>
                                            <li><strong>我需要注意什麼？</strong><br>
                                                一顆熱愛音樂、不畏艱難的心很重要！奠定良好的基礎，是日後進階學習高深、複雜技巧的基石。每位學生的學習狀況與進度各不相同，關鍵還是在耐心與恆心地學習。因此我會建議，穩穩地踏著自己的步伐前進，腳踏實地克服自己學習的障礙，才是進步的正確道路。<br><br>&nbsp;
                                            </li>
                                            <li><strong>一期一堂、四堂和八堂課，有什麼不一樣呢？</strong><br>
                                                基本上從零基礎，到至少能完成製作音樂的階段，需要一段時間。若按部就班、照表操課的話，大約需要十二堂課、三個月左右的時間。但每個人的學習狀況不同，因此老師也會視學生的情況，做課綱的調整。故在此提供的堂數選擇，都有其基本的功用及進度：<strong>《一堂課》屬體驗課程，引領學生入門，並建立觀念；《四堂課》則由架設音樂工作站，至實際軟體操作為主；《八堂課》則延伸四堂課的進度，開始進入琢磨基礎音樂能力、基礎樂器學，及樂曲風格分析、實作、仿作的階段；《十二堂課》則延續八堂課的進度，進入個人創作及實戰演練的階段（因系統限制，此進度需自行再購買四堂課）。不過再次強調，每個人的進度不同；有基礎者經評估後，也可直接跳至進階學習階段。因此第一堂課，老師需要先了解學生學習的狀況和程度，才能量身訂製屬於學生個人的進度表。</strong><br><br>&nbsp;
                                            </li>
                                            <li><strong>我還有問題想問——</strong><br>
                                                若想更瞭解老師的話，請上官網：shuoanchen.com<br>若不確定自己應該上哪堂課，想尋求建議的話，也歡迎來信洽詢：chensa0207@gmail.com<br><br><strong>期待與您一同創造美好的音樂！^^</strong>
                                            </li>
                                        </ul>
                    `;
                    editorInstance.setData(defaultDescription);
                }

                // 设置其他字段的默认值
                document.getElementById('fStartdate').value = "2023-10-17T11:10";
                document.getElementById('fEnddate').value = "2024-11-01T16:30";
                document.getElementById('fSiteName').value = 3;
                document.getElementById('fifOnLine').value = 0;
                document.getElementById('fName').value = 31;
                document.getElementById('fMaxStudent').value = 5;

                // 觸發 change 事件，以便更新隱藏的 fSiteID 和 fSkillID
                document.getElementById('fSiteName').dispatchEvent(new Event('change'));
                document.getElementById('fName').dispatchEvent(new Event('change'));
            });
        });

    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
