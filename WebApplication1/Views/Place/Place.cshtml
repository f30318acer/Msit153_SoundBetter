
<style>
    .ss-thumb {
        border-radius: 41px;
        margin-bottom: 22px;
        min-width: 100%;
        width: 250px;
        height: 250px;
    }

    #map {
        height: 250px;
        width: 100%;
        margin-bottom: 22px;
    }
</style>

<section class="playlist-section spad">
    <div class="container-fluid">
        <div class="row mb-4">
            <div class="section-title col-lg-3">
                <h2>場地一覽</h2>
            </div>
            <div class="container col-lg-9">
                <div class="text-right">
                    <select class="form-select" id="citySelect"></select>
                </div>
            </div>
        </div>    
        
        <div class="row col-12">
            <div class="mix col-12">                
                <div id="map" style=" border-radius: 20px; border:solid; border-color:gray"></div>
            </div>
            <div class="mix col-12">
                <div id="divList" class="row playlist-area">
                    <!--List內容-->
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        const slt = document.querySelector('#citySelect');

        function loadPlaceByCity(cityval) {
            const divList = $('#divList');
            let url = '/Place/QueryByCity';
            if (cityval) {
                url += `?fCityId=${cityval}`;
            }

            clearMarkers();

            const bounds = new google.maps.LatLngBounds();

            $.getJSON(url, function (datas) {

                const docFrag = $(document.createDocumentFragment());
                datas.forEach(item => {
                    // 使用地址進行地理編碼
                    geocoder.geocode({ address: item.fAddress }, (results, status) => {
                        if (status === "OK") {

                            const location = results[0].geometry.location;
                            bounds.extend(location);

                            const marker = new google.maps.Marker({
                                position: location,
                                map: map,
                                title: item.fSiteName
                            });

                            markers.push(marker);

                            const infoWindow = new google.maps.InfoWindow({
                                content: `<div><strong>${item.fSiteName}</strong><br>${item.fAddress}</div>`
                            });

                            marker.addListener('click', function () {
                                infoWindow.open(map, marker);
                            });

                        } else if (status === "ZERO_RESULTS") {
                            console.error("No results found for the provided address: " + item.fAddress);

                        } else {
                            console.error("Geocode was not successful for the following reason: " + status);
                        }
                        fitBounds(map, bounds);
                    });

                    const card = $(
                        `<a class="mix col-lg-3 col-md-4 col-sm-6" href="/Place/Details/${item.fSiteId}">
                            <div class="playlist-item">
                                <img src="/img/Place/${item.fPicturePath}" alt = "" class="ss-thumb">
                                <h5>${item.fSiteName}</h5>
                                <h5>${item.fCity}</h5>
                                <h5>@Model${item.fSiteTypeText}</h5>
                            </div>
                         <br />
                         </a>`);

                    docFrag.append(card);
                });
                divList.html(docFrag);
            });
        }

        function fitBounds(map, bounds) {
            // 設置地圖的範圍
            map.fitBounds(bounds);
        }

        function loadPlace() {
            const divList = $('#divList');
            let url = '/Place/List';

            $.getJSON(url, function (datas) {
                const docFrag = $(document.createDocumentFragment())
                $.each(datas, function (index, item) {
                    const card = $(
                        `<a class="mix col-lg-3 col-md-4 col-sm-6" href="/Place/Details/${item.fSiteId}">
                                    <div class="playlist-item">
                                        <img src="/img/Place/${item.fPicturePath}" alt = "" class="ss-thumb" >
                                        <h5>${item.fSiteName}</h5>
                                        <h5>${item.fCity}</h5>
                                        <h5>@Model${item.fSiteTypeText}</h5>
                                    </div>
                                 <br />
                                 </a>`);
                    docFrag.append(card);
                })
                divList.html(docFrag)
            })
        }

        loadPlace();

        async function loadCity() {
            const response = await fetch('@Url.Content("~/Place/GetCities")');
            const data = await response.json();
            const style = data.map(s => `<option value="${s.fCityId}">${s.fCity}</option>`);
            slt.innerHTML = style.join("");

            slt.addEventListener('change', async function () {
                const cityval = $('#citySelect').val();
                loadPlaceByCity(cityval);
            });
        }

        loadCity();

        let map;
        let marker;
        let geocoder;
        let markers = [];

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 8,
                center: { lat: 25.0169012, lng: 121.1945493 },
                mapTypeControl: false,
            });
            geocoder = new google.maps.Geocoder();
            marker = new google.maps.Marker({
                map,
            });
        }

        function clearMarkers() {
            // 遍歷地圖上的所有標記並將其清除
            for (let i = 0; i < markers.length; i++) {
                markers[i].setMap(null);
            }
            // 清空標記數組
            markers = [];
        }

        // 引入 Google Maps JavaScript API
         // const script = document.createElement('script');
         // script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyDpJq9VUwOC98iybSUuQggk04ir2ev31aM&callback=initMap&v=weekly';
         // script.defer = true;
         // document.head.appendChild(script);

    </script>
}