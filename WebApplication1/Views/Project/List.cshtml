
@{
    ViewData["Title"] = "List";
}


<!-- Playlist section -->
<section class="playlist-section spad">
	<div class="container-fluid">
		<div class="row mb-3">
			<div class="section-title col-lg-3">
				<h2>找製作</h2>
			</div>
			<div class="container col-lg-9">
				<div class="text-right">
					<select id="selectStyle" class="form-select mr-2"></select>
					<input type="text" id="txtKeyword" name="keywords" placeholder="關鍵字"class="mr-2"/>
					<button type="button" id="btnSearch" class="btn btn-secondary mr-2" >條件搜尋</button>
					<a href="javascript:void(0);" type="button" onclick="CheckLoginAndNavigate()" class="btn btn-info mr-2" style="background-color: #fc0254;">建立專案</a>
				</div>
			</div>
		</div>
		<div class="clearfix"></div>
		<div class="row">
			<div id="SkillList" class="row col-lg-2 col-md-6 col-sm-12 playlist-area">
				<!--Skill內容位置-->
			</div>
			<div id="divList" class="row col-lg-10 col-md-6 col-sm-12 playlist-area text-left">
                <!--List內容位置-->
            </div>
            <div id="pagination-container"></div>
		</div>
		
	</div>

	<div id="pageButtons" class="text-center">
		<!--分頁按鈕位置-->
	</div>
</section>
<!-- Playlist section end -->


@section Scripts{
	<script>
		const selStyle = document.querySelector('#selectStyle');
		const skillList = document.querySelector('#SkillList');
		const pageButtonsContainer = $('#pageButtons');
		const onePage = 12;

		//Style選擇器
		async function loadStyle() {
			const response = await fetch('@Url.Content("~/apiTStyle/List")');
			const data = await response.json();
			const defaultOption = '<option value="100">請選擇風格</option>';
			const styleOptions = data.map(s => `<option value="${s.fStyleId}">${s.fName}</option>`);
			styleOptions.unshift(defaultOption);
			selStyle.innerHTML = styleOptions.join("");
		}
		loadStyle();
		//Skill按鈕
		async function loadSkill() {
			const response = await fetch('@Url.Content("~/apiTProjects/SkillsList")');
			const data = await response.json();
			console.log(data);
			const defaultBtn = '<div class="col-12 mb-3"><button id="btnSkill" value="100" class="btn btn-info mr-2 active" style="width: 210px;background-color: #fc0254;">所有技能</button></div>';
			const skillsBtn = data.map(s => `<div class="col-6 mb-3"><button id="btnSkill" value="${s.fSkillId}" class="btn btn-secondary mr-2" style="width: 90px;">${s.fName}</button></div>`);
			skillsBtn.unshift(defaultBtn);
			skillList.innerHTML = skillsBtn.join("");
		}
		loadSkill();

		//Skill按鈕
		const btnSkill = document.getElementById('SkillList');
		// 添加點擊事件監聽器到 div 上
		btnSkill.addEventListener('click', function (event) {
			// 確保點擊的元素是按鈕
			if (event.target.tagName === 'BUTTON') {
				// 移除所有按鈕的 active 類
				const buttons = document.querySelectorAll('#btnSkill');
				buttons.forEach(button => button.classList.remove('active'));
				// 遍歷所有按鈕，將它們的背景色還原
				buttons.forEach(button => {
					button.style.backgroundColor = ''; // 還原預設的背景色
					button.style.color = ''; // 還原文字顏色
				});
				// 將被點擊的按鈕添加 active 類
				event.target.classList.add('active');
				// 獲取按鈕的 value
				const buttonValue = event.target.value;
				

				// 修改 active 按鈕的背景顏色
				event.target.style.backgroundColor = '#fc0254';

				// 這裡可以進一步處理按鈕的 value，例如更新 div 的內容
				load(1);
			}
		});

		//分頁按鈕
		async function loadPage() {
			const response = await fetch('@Url.Content("~/apiTProjects/List")');
			const data = await response.json();
			// 篩選條件
			const sId = $('#selectStyle').val();
			const keyword = $('#txtKeyword').val();

			// 根據所選風格篩選數據
			let filteredData = data;
			if (sId != 100) {
				filteredData = data.filter(item => item.fStyleId == sId);
			}
			//關鍵字篩選
			if (keyword != '') {
				filteredData = filteredData.filter(item => {
					// 在此添加關鍵字搜尋條件，例如在 fDescription 和 fName 中搜尋關鍵字
					return item.fDescription.includes(keyword) || item.fName.includes(keyword);
				});
			}

			const dataCount = filteredData.length;
			const pageCount = Math.ceil(dataCount / onePage);

			// 清空現有按鈕
			pageButtonsContainer.empty();
			for (let i = 1; i <= pageCount; i++) {
				let button = $(`<button class="btn btn-secondary mr-2">${i}</button>`);
				button.click(function () {
					load(i);
				});
				pageButtonsContainer.append(button);
			}
		}
		loadPage();
		//載入資料
		function load(pageNumber) {
			const divList = $('#divList')
			const sId = $('#selectStyle').val();
			const keyword = $('#txtKeyword').val(); // 新增的關鍵字搜尋
			const skillID = $('#SkillList').val()
			console.log('SkillID:', skillID);
			//divList.empty();

			$.getJSON('/apiTProjects/List', function (datas) {
				let filteredDatas = datas;
				
				//風格條件篩選
				if (sId != 100) {
					filteredDatas = datas.filter(item => {
						// 在此添加筛选条件
						return item.fStyleId == sId;
					});
				}
				//關鍵字篩選
				if (keyword) {
					filteredDatas = filteredDatas.filter(item => {
						// 在此添加關鍵字搜尋條件，例如在 fDescription 和 fName 中搜尋關鍵字
						return item.fDescription.includes(keyword) || item.fName.includes(keyword);
					});
				}
				//Skill條件
				if (skillID != 100) {
					filteredDatas = filteredDatas.filter(item => {
						return item.fSkillId == skillID;
					});
				}

				console.log(filteredDatas);

				dataCount = filteredDatas.length;

				//獲得限定頁面資料
				const limitdatas = filteredDatas.slice((pageNumber - 1) * onePage, ((pageNumber - 1) * onePage) + onePage);
				const docFrag = $(document.createDocumentFragment());

				(async function () {
					for (const item of limitdatas) {
						await LoadMemberInfo(item.fMemberId);
						console.log(item.fProjectId); // 在這裡處理 memberName
						const descriSub = item.fDescription.length > 15 ? item.fDescription.substring(0, 15) + '...' : item.fDescription;
						const card = $(`<a class="mix col-lg-3 col-md-4 col-sm-6" href="/Project/Details/${item.fProjectId}">
								<div class="playlist-item">
									<img src="/img/project/${item.fThumbnailPath}" alt = "" >
									<h5>${item.fName}</h5>
									<p style="margin:0px">製作人:${memberName}/應徵人數:0</p>
									<p>${descriSub}</p>
								</div>
							</a>`);
						docFrag.append(card);
					}
					// 更新 divList
					divList.html(docFrag);
				})();
			});			
		}

		//第一次讀取
		function firstLoad(pageNumber) {
			const divList = $('#divList')
			//divList.empty();

			$.getJSON('/apiTProjects/List', function (datas) {
				//獲得限定頁面資料
				const limitdatas = datas.slice((pageNumber - 1) * onePage, ((pageNumber - 1) * onePage) + onePage);
				const docFrag = $(document.createDocumentFragment());

				(async function () {
					for (const item of limitdatas) {
						await LoadMemberInfo(item.fMemberId);
						console.log(item.fProjectId); 
						// 在這裡處理 memberName
						const descriSub = item.fDescription.length > 15 ? item.fDescription.substring(0, 15) + '...' : item.fDescription;
						const card = $(`<a class="mix col-lg-3 col-md-4 col-sm-6" href="/Project/Details/${item.fProjectId}">
								<div class="playlist-item">
									<img src="/img/project/${item.fThumbnailPath}" alt = "" >
									<h5>${item.fName}</h5>
									<p style="margin: 0;">製作人:${memberName}/應徵人數:0</p>
									<p>${descriSub}</p>
								</div>
							</a>`);
						docFrag.append(card);
					}

					// 更新 divList
					divList.html(docFrag);
				})();
			});
		}
		firstLoad(1);

		//讀取會員資料
		let memberName;
		function LoadMemberInfo(memberId){
			return new Promise(function (resolve) {
				$.getJSON(`/apiTProjects/QueryMemberById/${memberId}`, function (datas) {
					memberName = datas.fUsername;
					resolve();
				});
			});
		}
		
		
		//搜尋按鈕
		$('#btnSearch').click(function () {		
			//讀取條件篩選後第一頁,重新讀取分頁頁碼
			load(1);
			loadPage();
			//$('#txtKeyword').val('');
		});
		//判斷是否登入
		async function CheckLoginAndNavigate() {
			const response = await fetch(`@Url.Content("~/apiHome/IsLogin")`);
			const isLogin = await response.json();

			if (isLogin) {
				// 如果已登錄，導航到 ClassController/Create
				window.location.href = "@Url.Action("Create", "Project")";
			} else {
				// 如果未登錄，導航到 Home/Login
				window.location.href = "@Url.Action("Login", "Home")";
			}
		}
	</script>
}