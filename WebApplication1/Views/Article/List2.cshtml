
@{
    ViewData["Title"] = "List";
}

<!-- Blog section -->
<style>
    .text-container {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .expanded {
        white-space: normal;
        overflow: visible;
        text-overflow: unset;
    }
</style>
<section class="playlist-section spad">
    <div class="container-fluid">
        <div class="row mb-4">
            <div class="section-title col-lg-3">
                <h2>音樂文章</h2>
            </div>
            <div class="container col-lg-9">
                <div class="text-right">
                    <input type="text" name="keywords" placeholder="文章" />
                    <button type="button" class="btn btn-secondary">搜尋</button>
                    <a href="~/Article/Create" type="button" class="btn btn-success">新增文章</a>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
        <div id="divList" class="row playlist-area">
            <!--List內容-->
        </div>
        <div id="pagination-container"></div>
    </div>

</section>
<!-- 分頁按鈕區域 -->
<section class="help-section spad pt-0">
	<div class="container">
		<div id="pageButtons" class="text-center">
			<!--分頁按鈕位置-->
		</div>
	</div>
</section>

@section Scripts{
    <script>
        const pageButtonsContainer = $('#pageButtons');
        const onePage = 8;
        //分頁按鈕
            async function loadPage(){
			const response = await fetch('@Url.Content("~/apiTArticle/List")');
			const data = await response.json();
		
		
			console.log(pageCount);
            // 篩選條件
            const sId = $('#selectStyle').val();
            const keyword = $('#txtKeyword').val();

            // 根據所選風格篩選數據
            let filteredData = data;
            if (sId != 100) {
                filteredData = data.filter(item => item.fStyleId == sId);
            }
            //關鍵字篩選
            if (keyword != '') {
                filteredData = filteredData.filter(item => {
                    // 在此添加關鍵字搜尋條件，例如在 fDescription 和 fName 中搜尋關鍵字
                    return item.fContent.includes(keyword) || item.fName.includes(keyword);
                });
            }

            const dataCount = filteredData.length;
            const pageCount = Math.ceil(dataCount / onePage);
            // 清空現有按鈕
            pageButtonsContainer.empty();
			for (let i = 1; i <= pageCount; i++) {
				const button = $(`<button class="btn btn-secondary mr-2">${i}</button>`);
				button.click(function () {
					load(i);
				});
				pageButtonsContainer.append(button);
			}
		}
		loadPage();
        function load(pageNumber) {
            const divList = $('#divList')
            const sId = $('#selectStyle').val();
            const keyword = $('#txtKeyword').val(); // 新增的關鍵字搜尋
            //divList.empty();
            $.getJSON('/apiTArticle/List', function (datas) {
                let filteredDatas = datas;
                //風格條件篩選
                if (sId != 100) {
                    filteredDatas = datas.filter(item => {
                        // 在此添加筛选条件
                        return item.fStyleId == sId;
                    });
                }
                //關鍵字篩選
                if (keyword) {
                    filteredDatas = filteredDatas.filter(item => {
                        // 在此添加關鍵字搜尋條件，例如在 fDescription 和 fName 中搜尋關鍵字
                        return item.fContent.includes(keyword) || item.fName.includes(keyword);
                    });
                }
                console.log(filteredDatas);

                dataCount = filteredDatas.length;
                console.log(datas);
                //獲得限定頁面資料
                const limitdatas = datas.slice((pageNumber - 1) * onePage, ((pageNumber - 1) * onePage) + onePage);

                const docFrag = $(document.createDocumentFragment())
                $.each(limitdatas, function (index, item) {
                    const descriSub = item.fContent.length > 15 ? item.fContent.substring(0, 15) + '...' : item.fContent;
                    const card = $(
                        `<a  href="/Article/Details/${item.fArticleId}" class="mix col-lg-3 col-md-4 col-sm-6" >
                                            <div class="playlist-item">
                                                <img src="/img/Article/${item.fPhotoPath}" alt = "" >
                                                        <h5>${item.fTitle}</h5>
                                                <p>${descriSub}</p>
                                            </div>
                                        </a>`);
                    console.log(card);
                    docFrag.append(card);
                })
                divList.html(docFrag)
            })
        }
        load(1);

		
    </script>
}
